package com.translation.dao.impl;

import com.translation.bean.Love;
import com.translation.bean.LoveExample;
import com.translation.dao.LoveDAO;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class LoveDAOImpl extends SqlMapClientDaoSupport implements LoveDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public LoveDAOImpl() {
        super();
    }

    
    /**
     * @author 浩然
     * @param example
     * @param startCounts
     * @param maxCounts
     * @return
     */
    public List selectByGroup(LoveExample example,int startCounts,int maxCounts)
    {
    	return getSqlMapClientTemplate().queryForList("love.ibatorgenerated_selectByGroup", example,startCounts, maxCounts);
    }
    
    
    /**
     * @author 浩然
     * 分页获取love
     * @param example
     * @param startCounts
     * @param maxCounts
     * @return
     */
    public List selectByPage(LoveExample example,int startCounts,int maxCounts)
    {
    	return getSqlMapClientTemplate().queryForList("love.ibatorgenerated_selectByExample", example,startCounts, maxCounts);
    }
    
    
    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public int countByExample(LoveExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("love.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public int deleteByExample(LoveExample example) {
        int rows = getSqlMapClientTemplate().delete("love.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public int deleteByPrimaryKey(Integer likeid) {
        Love key = new Love();
        key.setLikeid(likeid);
        int rows = getSqlMapClientTemplate().delete("love.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public void insert(Love record) {
        getSqlMapClientTemplate().insert("love.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public void insertSelective(Love record) {
        getSqlMapClientTemplate().insert("love.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public List selectByExample(LoveExample example) {
        List list = getSqlMapClientTemplate().queryForList("love.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public Love selectByPrimaryKey(Integer likeid) {
        Love key = new Love();
        key.setLikeid(likeid);
        Love record = (Love) getSqlMapClientTemplate().queryForObject("love.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public int updateByExampleSelective(Love record, LoveExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("love.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public int updateByExample(Love record, LoveExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("love.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public int updateByPrimaryKeySelective(Love record) {
        int rows = getSqlMapClientTemplate().update("love.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    public int updateByPrimaryKey(Love record) {
        int rows = getSqlMapClientTemplate().update("love.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table love
     *
     * @ibatorgenerated Thu Apr 16 22:47:44 CST 2015
     */
    private static class UpdateByExampleParms extends LoveExample {
        private Object record;

        public UpdateByExampleParms(Object record, LoveExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}